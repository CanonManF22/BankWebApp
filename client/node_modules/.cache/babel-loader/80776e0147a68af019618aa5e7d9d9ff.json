{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Gadjali\\\\Documents\\\\GitHub\\\\BankWebApp\\\\client\\\\src\\\\components\\\\pages\\\\AccountPage.js\";\nimport React from \"react\";\nvar divStyle = {\n  backgroundColor: \"#4e74a6\",\n  padding: \"50px\",\n  margin: \"50px\",\n  marginTop: \"0px\"\n};\n\nvar Page =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Page, _React$Component);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this, props));\n\n    _this.fetchAccounts =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var user_id, data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //const {user_id} = this.state;\n                user_id = 1;\n                console.log(\"finding accounts under \");\n                e.preventDefault();\n                data = _this.state.data;\n                console.log(\"DATA\", data);\n                _context.next = 7;\n                return fetch(\"http://localhost:8080/accounts/:user_id/\", {\n                  mode: \"cors\",\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    post: data\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 7:\n                response = _context.sent;\n\n                _this.setState({\n                  responseToPost: response\n                });\n\n                if (response.length < 1) {\n                  console.log(\"no accounts for user\");\n                } else {\n                  console.log(response); //return response;\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      user_id: null,\n      accounts: [\"acc1\", \"acc2\"]\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"renderAccount\",\n    value: function renderAccount(i) {\n      console.log(\"yo\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"temp\");\n    } //gets all accounts of a given user_id\n\n  }, {\n    key: \"render\",\n    //fetches account info from api, renders each account, where do we get user id from?\n    value: function render() {\n      //TODO, hardcoded with test user_id\n      var resp = this.fetchAccounts;\n      console.log(this.fetchAccounts);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Placeholder [ATMs]\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Page;\n}(React.Component);\n\nvar AccountPage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(AccountPage, _React$Component2);\n\n  function AccountPage() {\n    _classCallCheck(this, AccountPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AccountPage).apply(this, arguments));\n  }\n\n  _createClass(AccountPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AccountPage;\n}(React.Component);\n\nexport default AccountPage;","map":{"version":3,"sources":["C:\\Users\\Nicholas Gadjali\\Documents\\GitHub\\BankWebApp\\client\\src\\components\\pages\\AccountPage.js"],"names":["React","divStyle","backgroundColor","padding","margin","marginTop","Page","props","fetchAccounts","e","user_id","console","log","preventDefault","data","state","fetch","mode","method","headers","body","JSON","stringify","post","then","res","json","response","setState","responseToPost","length","accounts","i","resp","color","Component","AccountPage"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE,SADF;AAEfC,EAAAA,OAAO,EAAE,MAFM;AAGfC,EAAAA,MAAM,EAAE,MAHO;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAjB;;IAOMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,UAcnBC,aAdmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAcH,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACd;AACMC,gBAAAA,OAFQ,GAEE,CAFF;AAGdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAH,gBAAAA,CAAC,CAACI,cAAF;AACQC,gBAAAA,IALM,GAKG,MAAKC,KALR,CAKND,IALM;AAMdH,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AANc;AAAA,uBAOSE,KAAK,CAAC,0CAAD,EAA6C;AACvEC,kBAAAA,IAAI,EAAE,MADiE;AAEvEC,kBAAAA,MAAM,EAAE,MAF+D;AAGvEC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAH8D;AAMvEC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,IAAI,EAAET;AAAR,mBAAf;AANiE,iBAA7C,CAAL,CAOpBU,IAPoB,CAOf,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAPY,CAPT;;AAAA;AAORC,gBAAAA,QAPQ;;AAed,sBAAKC,QAAL,CAAc;AAAEC,kBAAAA,cAAc,EAAEF;AAAlB,iBAAd;;AACA,oBAAIA,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBnB,kBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,iBAFD,MAEO;AACLD,kBAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ,EADK,CAEL;AACD;;AArBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAdG;;AAAA;AAAA;AAAA;AAAA;;AAEjB,UAAKZ,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,IADE;AAEXqB,MAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT;AAFC,KAAb;AAFiB;AAMlB;;;;kCAEaC,C,EAAG;AACfrB,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,K,CAED;;;;AAyBA;6BACS;AACP;AACA,UAAMqB,IAAI,GAAG,KAAKzB,aAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,aAAjB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAE0B,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAlDgBlC,KAAK,CAACmC,S;;IAqDnBC,W;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,KAAK,EAAEnC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAPuBD,KAAK,CAACmC,S;;AAUhC,eAAeC,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst divStyle = {\r\n  backgroundColor: \"#4e74a6\",\r\n  padding: \"50px\",\r\n  margin: \"50px\",\r\n  marginTop: \"0px\"\r\n};\r\n\r\nclass Page extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: null,\r\n      accounts: [\"acc1\", \"acc2\"]\r\n    };\r\n  }\r\n\r\n  renderAccount(i) {\r\n    console.log(\"yo\");\r\n    return <div>temp</div>;\r\n  }\r\n\r\n  //gets all accounts of a given user_id\r\n  fetchAccounts = async e => {\r\n    //const {user_id} = this.state;\r\n    const user_id = 1;\r\n    console.log(\"finding accounts under \");\r\n    e.preventDefault();\r\n    const { data } = this.state;\r\n    console.log(\"DATA\", data);\r\n    const response = await fetch(\"http://localhost:8080/accounts/:user_id/\", {\r\n      mode: \"cors\",\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ post: data })\r\n    }).then(res => res.json());\r\n    this.setState({ responseToPost: response });\r\n    if (response.length < 1) {\r\n      console.log(\"no accounts for user\");\r\n    } else {\r\n      console.log(response);\r\n      //return response;\r\n    }\r\n  };\r\n\r\n  //fetches account info from api, renders each account, where do we get user id from?\r\n  render() {\r\n    //TODO, hardcoded with test user_id\r\n    const resp = this.fetchAccounts;\r\n    console.log(this.fetchAccounts);\r\n    return (\r\n      <div>\r\n        <h1 style={{ color: \"#ffffff\" }}>Placeholder [ATMs]</h1>\r\n        <ul />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AccountPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        <Page />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountPage;\r\n"]},"metadata":{},"sourceType":"module"}