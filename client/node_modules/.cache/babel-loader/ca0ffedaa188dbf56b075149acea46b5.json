{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicholas Gadjali\\\\Desktop\\\\BankWebApp\\\\client\\\\src\\\\components\\\\pages\\\\TransferChasePage.js\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nvar divStyle = {\n  backgroundColor: \"#c1ced9\",\n  padding: \"50px\",\n  margin: \"50px\",\n  marginTop: \"0px\"\n};\n\nvar TransferChasePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransferChasePage, _React$Component);\n\n  function TransferChasePage(props) {\n    var _this;\n\n    _classCallCheck(this, TransferChasePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferChasePage).call(this, props));\n\n    _this.fetchAccounts =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var user_id, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this.props.location.state === undefined)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                window.alert(\"Error: Not Logged In.  this.props.location.state is undefined.\");\n\n                _this.setState({\n                  uID: -1,\n                  accounts: [{\n                    accType: \"null\",\n                    accountID: -1,\n                    accBalance: -1\n                  }]\n                });\n\n                return _context.abrupt(\"return\", {\n                  uID: -1\n                });\n\n              case 4:\n                user_id = _this.props.location.state.uID;\n                console.log(\"http://localhost:8080/accounts/\".concat(user_id));\n                _context.next = 8;\n                return fetch(\"http://localhost:8080/accounts/\".concat(user_id), {\n                  mode: \"cors\",\n                  method: \"GET\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 8:\n                response = _context.sent;\n\n                _this.setState({\n                  accounts: response,\n                  uID: _this.props.location.state.uID\n                });\n\n                if (!(response.length < 1)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                window.alert(\"No accounts for this user\");\n                _context.next = 15;\n                break;\n\n              case 14:\n                return _context.abrupt(\"return\", response);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange1 = function (e) {\n      _this.setState({\n        option1: e.target.value\n      });\n    };\n\n    _this.handleChange2 = function (e) {\n      _this.setState({\n        option2: e.target.value\n      });\n    };\n\n    _this.handleChangeNums = function (e) {\n      _this.setState({\n        transferamt: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function () {\n      if (_this.state.option1 === _this.state.option2) window.alert(\"Error: Same Account Chosen.  Choose a different account.\");else if (_this.state.transferamt <= 0) window.alert(\"Error: Invalid transfer amount.\");else {\n        var firstSplit = _this.state.option1.split(\" - \"); //split information again. [0] = type, [1] = accountID, [2] = balance\n\n\n        var secondSplit = _this.state.option2.split(\" - \");\n\n        firstSplit[2] = firstSplit[2].substring(1);\n        secondSplit[2] = secondSplit[2].substring(1);\n        if (parseFloat(firstSplit[2]) < parseFloat(secondSplit[2]) || parseFloat(firstSplit[2]) < parseFloat(_this.state.transferamt)) window.alert(\"Error: Not Enough Funds\");else {//do api call & redirect back to transfer page\n        }\n      }\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      uID: null,\n      option1: null,\n      option2: null,\n      accounts: [{\n        accType: \"null\",\n        accountID: -1,\n        accBalance: -1\n      }],\n      transferamt: 0\n    };\n    return _this;\n  } //wait until info fetched\n\n\n  _createClass(TransferChasePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchAccounts().then(function (res) {\n        return _this2.setState({\n          accounts: res,\n          option1: _this2.state.accounts[0].accType + \" - \" + _this2.state.accounts[0].accountID + \" - \" + \"$\" + parseFloat(Math.round(_this2.state.accounts[0].accBalance * 100) / 100).toFixed(2),\n          option2: _this2.state.accounts[0].accType + \" - \" + _this2.state.accounts[0].accountID + \" - \" + \"$\" + parseFloat(Math.round(_this2.state.accounts[0].accBalance * 100) / 100).toFixed(2)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fetched = this.state.accounts;\n      if (fetched === undefined) fetched = [];\n      return fetched.length ? React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Initiate a Transfer\"), React.createElement(\"hr\", {\n        style: {\n          backgroundColor: \"#72736e\",\n          border: \"none\",\n          height: \"4px\",\n          color: \"#72736e\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        style: {\n          fontSize: \"150%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Transfer From\"), React.createElement(Form.Control, {\n        as: \"select\",\n        onChange: this.handleChange1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.accounts.map(function (acc) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, acc.accType + \" - \" + acc.accountID + \" - \" + \"$\" + parseFloat(Math.round(acc.accBalance * 100) / 100).toFixed(2));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        style: {\n          fontSize: \"150%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Transfer To\"), React.createElement(Form.Control, {\n        as: \"select\",\n        onChange: this.handleChange2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.accounts.map(function (acc) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, acc.accType + \" - \" + acc.accountID + \" - \" + \"$\" + parseFloat(Math.round(acc.accBalance * 100) / 100).toFixed(2));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Form.Label, {\n        style: {\n          fontSize: \"150%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Amount ($USD)\"), React.createElement(Form.Control, {\n        type: \"number\",\n        value: this.state.transferamt,\n        onChange: this.handleChangeNums,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        style: {\n          marginTop: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Submit Transfer Request\"))) : React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"No accounts for this user.\"));\n    }\n  }]);\n\n  return TransferChasePage;\n}(React.Component);\n\nexport default withRouter(TransferChasePage);","map":{"version":3,"sources":["C:\\Users\\Nicholas Gadjali\\Desktop\\BankWebApp\\client\\src\\components\\pages\\TransferChasePage.js"],"names":["React","Form","Button","withRouter","divStyle","backgroundColor","padding","margin","marginTop","TransferChasePage","props","fetchAccounts","e","location","state","undefined","window","alert","setState","uID","accounts","accType","accountID","accBalance","user_id","console","log","fetch","mode","method","headers","then","res","json","response","length","handleChange1","option1","target","value","handleChange2","option2","handleChangeNums","transferamt","handleSubmit","firstSplit","split","secondSplit","substring","parseFloat","Math","round","toFixed","fetched","color","border","height","fontSize","map","acc","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE,SADF;AAEfC,EAAAA,OAAO,EAAE,MAFM;AAGfC,EAAAA,MAAM,EAAE,MAHO;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAjB;;IAOMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,UAsCnBC,aAtCmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAsCH,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEV,MAAKF,KAAL,CAAWG,QAAX,CAAoBC,KAApB,KAA8BC,SAFpB;AAAA;AAAA;AAAA;;AAGZC,gBAAAA,MAAM,CAACC,KAAP,CACE,gEADF;;AAGA,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,GAAG,EAAE,CAAC,CADM;AAEZC,kBAAAA,QAAQ,EAAE,CAAC;AAAEC,oBAAAA,OAAO,EAAE,MAAX;AAAmBC,oBAAAA,SAAS,EAAE,CAAC,CAA/B;AAAkCC,oBAAAA,UAAU,EAAE,CAAC;AAA/C,mBAAD;AAFE,iBAAd;;AANY,iDAUL;AAAEJ,kBAAAA,GAAG,EAAE,CAAC;AAAR,iBAVK;;AAAA;AAaRK,gBAAAA,OAbQ,GAaE,MAAKd,KAAL,CAAWG,QAAX,CAAoBC,KAApB,CAA0BK,GAb5B;AAcdM,gBAAAA,OAAO,CAACC,GAAR,0CAA8CF,OAA9C;AAdc;AAAA,uBAgBSG,KAAK,0CAAmCH,OAAnC,GAA8C;AACxEI,kBAAAA,IAAI,EAAE,MADkE;AAExEC,kBAAAA,MAAM,EAAE,KAFgE;AAGxEC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT;AAH+D,iBAA9C,CAAL,CAMpBC,IANoB,CAMf,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBANY,CAhBT;;AAAA;AAgBRC,gBAAAA,QAhBQ;;AAuBd,sBAAKhB,QAAL,CAAc;AAAEE,kBAAAA,QAAQ,EAAEc,QAAZ;AAAsBf,kBAAAA,GAAG,EAAE,MAAKT,KAAL,CAAWG,QAAX,CAAoBC,KAApB,CAA0BK;AAArD,iBAAd;;AAvBc,sBAwBVe,QAAQ,CAACC,MAAT,GAAkB,CAxBR;AAAA;AAAA;AAAA;;AAyBZnB,gBAAAA,MAAM,CAACC,KAAP,CAAa,2BAAb;AAzBY;AAAA;;AAAA;AAAA,iDA2BLiB,QA3BK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtCG;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAsEnBE,aAtEmB,GAsEH,UAAAxB,CAAC,EAAI;AACnB,YAAKM,QAAL,CAAc;AACZmB,QAAAA,OAAO,EAAEzB,CAAC,CAAC0B,MAAF,CAASC;AADN,OAAd;AAGD,KA1EkB;;AAAA,UA6EnBC,aA7EmB,GA6EH,UAAA5B,CAAC,EAAI;AACnB,YAAKM,QAAL,CAAc;AACZuB,QAAAA,OAAO,EAAE7B,CAAC,CAAC0B,MAAF,CAASC;AADN,OAAd;AAGD,KAjFkB;;AAAA,UAoFnBG,gBApFmB,GAoFA,UAAA9B,CAAC,EAAI;AACtB,YAAKM,QAAL,CAAc;AAAEyB,QAAAA,WAAW,EAAE/B,CAAC,CAAC0B,MAAF,CAASC;AAAxB,OAAd;AACD,KAtFkB;;AAAA,UAyFnBK,YAzFmB,GAyFJ,YAAM;AACnB,UAAI,MAAK9B,KAAL,CAAWuB,OAAX,KAAuB,MAAKvB,KAAL,CAAW2B,OAAtC,EACEzB,MAAM,CAACC,KAAP,CAAa,0DAAb,EADF,KAEK,IAAI,MAAKH,KAAL,CAAW6B,WAAX,IAA0B,CAA9B,EACH3B,MAAM,CAACC,KAAP,CAAa,iCAAb,EADG,KAEA;AACH,YAAI4B,UAAU,GAAG,MAAK/B,KAAL,CAAWuB,OAAX,CAAmBS,KAAnB,CAAyB,KAAzB,CAAjB,CADG,CAC+C;;;AAClD,YAAIC,WAAW,GAAG,MAAKjC,KAAL,CAAW2B,OAAX,CAAmBK,KAAnB,CAAyB,KAAzB,CAAlB;;AACAD,QAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAAV,CAAcG,SAAd,CAAwB,CAAxB,CAAhB;AACAD,QAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyB,CAAzB,CAAjB;AACA,YACEC,UAAU,CAACJ,UAAU,CAAC,CAAD,CAAX,CAAV,GAA4BI,UAAU,CAACF,WAAW,CAAC,CAAD,CAAZ,CAAtC,IACAE,UAAU,CAACJ,UAAU,CAAC,CAAD,CAAX,CAAV,GAA4BI,UAAU,CAAC,MAAKnC,KAAL,CAAW6B,WAAZ,CAFxC,EAIE3B,MAAM,CAACC,KAAP,CAAa,yBAAb,EAJF,KAKK,CACH;AACD;AACF;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAjB;AACD,KA7GkB;;AAEjB,UAAKA,KAAL,GAAa;AACXK,MAAAA,GAAG,EAAE,IADM;AAEXkB,MAAAA,OAAO,EAAE,IAFE;AAGXI,MAAAA,OAAO,EAAE,IAHE;AAIXrB,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE,CAAC,CAA/B;AAAkCC,QAAAA,UAAU,EAAE,CAAC;AAA/C,OAAD,CAJC;AAKXoB,MAAAA,WAAW,EAAE;AALF,KAAb;AAFiB;AASlB,G,CAED;;;;;wCACoB;AAAA;;AAClB,WAAKhC,aAAL,GAAqBoB,IAArB,CAA0B,UAAAC,GAAG;AAAA,eAC3B,MAAI,CAACd,QAAL,CAAc;AACZE,UAAAA,QAAQ,EAAEY,GADE;AAEZK,UAAAA,OAAO,EACL,MAAI,CAACvB,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBC,OAAvB,GACA,KADA,GAEA,MAAI,CAACP,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBE,SAFvB,GAGA,KAHA,GAIA,GAJA,GAKA2B,UAAU,CACRC,IAAI,CAACC,KAAL,CAAW,MAAI,CAACrC,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBG,UAAvB,GAAoC,GAA/C,IAAsD,GAD9C,CAAV,CAEE6B,OAFF,CAEU,CAFV,CARU;AAWZX,UAAAA,OAAO,EACL,MAAI,CAAC3B,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBC,OAAvB,GACA,KADA,GAEA,MAAI,CAACP,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBE,SAFvB,GAGA,KAHA,GAIA,GAJA,GAKA2B,UAAU,CACRC,IAAI,CAACC,KAAL,CAAW,MAAI,CAACrC,KAAL,CAAWM,QAAX,CAAoB,CAApB,EAAuBG,UAAvB,GAAoC,GAA/C,IAAsD,GAD9C,CAAV,CAEE6B,OAFF,CAEU,CAFV;AAjBU,SAAd,CAD2B;AAAA,OAA7B;AAuBD;;;6BA2EQ;AACP,UAAIC,OAAO,GAAG,KAAKvC,KAAL,CAAWM,QAAzB;AACA,UAAIiC,OAAO,KAAKtC,SAAhB,EAA2BsC,OAAO,GAAG,EAAV;AAC3B,aAAOA,OAAO,CAAClB,MAAR,GACL;AAAK,QAAA,KAAK,EAAE/B,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEkD,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AACE,QAAA,KAAK,EAAE;AACLjD,UAAAA,eAAe,EAAE,SADZ;AAELkD,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,MAAM,EAAE,KAHH;AAILF,UAAAA,KAAK,EAAE;AAJF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,QAAQ,EAAE,KAAKrB,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKtB,KAAL,CAAWM,QAAX,CAAoBsC,GAApB,CAAwB,UAAAC,GAAG;AAAA,eAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,GAAG,CAACtC,OAAJ,GACC,KADD,GAECsC,GAAG,CAACrC,SAFL,GAGC,KAHD,GAIC,GAJD,GAKC2B,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWQ,GAAG,CAACpC,UAAJ,GAAiB,GAA5B,IAAmC,GAApC,CAAV,CAAmD6B,OAAnD,CAA2D,CAA3D,CANJ,CAD0B;AAAA,OAA3B,CADH,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,EAgBE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,QAAQ,EAAE,KAAKjB,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK1B,KAAL,CAAWM,QAAX,CAAoBsC,GAApB,CAAwB,UAAAC,GAAG;AAAA,eAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,GAAG,CAACtC,OAAJ,GACC,KADD,GAECsC,GAAG,CAACrC,SAFL,GAGC,KAHD,GAIC,GAJD,GAKC2B,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWQ,GAAG,CAACpC,UAAJ,GAAiB,GAA5B,IAAmC,GAApC,CAAV,CAAmD6B,OAAnD,CAA2D,CAA3D,CANJ,CAD0B;AAAA,OAA3B,CADH,CAhBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EA6BE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA7BF,EA8BE,oBAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,KAAK3C,KAAL,CAAW6B,WAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKD,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,EAmCE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,YAAtB;AAAoC,QAAA,KAAK,EAAE;AAAEpC,UAAAA,SAAS,EAAE;AAAb,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAnCF,CAVF,CADK,GAoDL;AAAK,QAAA,KAAK,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEkD,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CApDF;AAwDD;;;;EA3K6BtD,KAAK,CAAC4D,S;;AA8KtC,eAAezD,UAAU,CAACM,iBAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst divStyle = {\r\n  backgroundColor: \"#c1ced9\",\r\n  padding: \"50px\",\r\n  margin: \"50px\",\r\n  marginTop: \"0px\"\r\n};\r\n\r\nclass TransferChasePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      uID: null,\r\n      option1: null,\r\n      option2: null,\r\n      accounts: [{ accType: \"null\", accountID: -1, accBalance: -1 }],\r\n      transferamt: 0\r\n    };\r\n  }\r\n\r\n  //wait until info fetched\r\n  componentDidMount() {\r\n    this.fetchAccounts().then(res =>\r\n      this.setState({\r\n        accounts: res,\r\n        option1:\r\n          this.state.accounts[0].accType +\r\n          \" - \" +\r\n          this.state.accounts[0].accountID +\r\n          \" - \" +\r\n          \"$\" +\r\n          parseFloat(\r\n            Math.round(this.state.accounts[0].accBalance * 100) / 100\r\n          ).toFixed(2),\r\n        option2:\r\n          this.state.accounts[0].accType +\r\n          \" - \" +\r\n          this.state.accounts[0].accountID +\r\n          \" - \" +\r\n          \"$\" +\r\n          parseFloat(\r\n            Math.round(this.state.accounts[0].accBalance * 100) / 100\r\n          ).toFixed(2)\r\n      })\r\n    );\r\n  }\r\n\r\n  fetchAccounts = async e => {\r\n    //not logged in check to prevent fatal crash\r\n    if (this.props.location.state === undefined) {\r\n      window.alert(\r\n        \"Error: Not Logged In.  this.props.location.state is undefined.\"\r\n      );\r\n      this.setState({\r\n        uID: -1,\r\n        accounts: [{ accType: \"null\", accountID: -1, accBalance: -1 }]\r\n      });\r\n      return { uID: -1 };\r\n    }\r\n\r\n    const user_id = this.props.location.state.uID;\r\n    console.log(`http://localhost:8080/accounts/${user_id}`);\r\n\r\n    const response = await fetch(`http://localhost:8080/accounts/${user_id}`, {\r\n      mode: \"cors\",\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(res => res.json());\r\n    this.setState({ accounts: response, uID: this.props.location.state.uID });\r\n    if (response.length < 1) {\r\n      window.alert(\"No accounts for this user\");\r\n    } else {\r\n      return response;\r\n    }\r\n  };\r\n\r\n  //first dropdown\r\n  handleChange1 = e => {\r\n    this.setState({\r\n      option1: e.target.value\r\n    });\r\n  };\r\n\r\n  //second dropdown\r\n  handleChange2 = e => {\r\n    this.setState({\r\n      option2: e.target.value\r\n    });\r\n  };\r\n\r\n  //amount\r\n  handleChangeNums = e => {\r\n    this.setState({ transferamt: e.target.value });\r\n  };\r\n\r\n  //submit transfer request\r\n  handleSubmit = () => {\r\n    if (this.state.option1 === this.state.option2)\r\n      window.alert(\"Error: Same Account Chosen.  Choose a different account.\");\r\n    else if (this.state.transferamt <= 0)\r\n      window.alert(\"Error: Invalid transfer amount.\");\r\n    else {\r\n      let firstSplit = this.state.option1.split(\" - \"); //split information again. [0] = type, [1] = accountID, [2] = balance\r\n      let secondSplit = this.state.option2.split(\" - \");\r\n      firstSplit[2] = firstSplit[2].substring(1);\r\n      secondSplit[2] = secondSplit[2].substring(1);\r\n      if (\r\n        parseFloat(firstSplit[2]) < parseFloat(secondSplit[2]) ||\r\n        parseFloat(firstSplit[2]) < parseFloat(this.state.transferamt)\r\n      )\r\n        window.alert(\"Error: Not Enough Funds\");\r\n      else {\r\n        //do api call & redirect back to transfer page\r\n      }\r\n    }\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    let fetched = this.state.accounts;\r\n    if (fetched === undefined) fetched = [];\r\n    return fetched.length ? (\r\n      <div style={divStyle}>\r\n        <h1 style={{ color: \"#000000\" }}>Initiate a Transfer</h1>\r\n        <hr\r\n          style={{\r\n            backgroundColor: \"#72736e\",\r\n            border: \"none\",\r\n            height: \"4px\",\r\n            color: \"#72736e\"\r\n          }}\r\n        />\r\n        <Form.Group>\r\n          <Form.Label style={{ fontSize: \"150%\" }}>Transfer From</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.handleChange1}>\r\n            {this.state.accounts.map(acc => (\r\n              <option>\r\n                {acc.accType +\r\n                  \" - \" +\r\n                  acc.accountID +\r\n                  \" - \" +\r\n                  \"$\" +\r\n                  parseFloat(Math.round(acc.accBalance * 100) / 100).toFixed(2)}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n          <br />\r\n          <Form.Label style={{ fontSize: \"150%\" }}>Transfer To</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.handleChange2}>\r\n            {this.state.accounts.map(acc => (\r\n              <option>\r\n                {acc.accType +\r\n                  \" - \" +\r\n                  acc.accountID +\r\n                  \" - \" +\r\n                  \"$\" +\r\n                  parseFloat(Math.round(acc.accBalance * 100) / 100).toFixed(2)}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n          <br />\r\n          <Form.Label style={{ fontSize: \"150%\" }}>Amount ($USD)</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={this.state.transferamt}\r\n            onChange={this.handleChangeNums}\r\n          />\r\n          <Button onClick={this.handleSubmit} style={{ marginTop: \"10px\" }}>\r\n            Submit Transfer Request\r\n          </Button>\r\n        </Form.Group>\r\n      </div>\r\n    ) : (\r\n      <div style={divStyle}>\r\n        <h1 style={{ color: \"#000000\" }}>No accounts for this user.</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TransferChasePage);\r\n"]},"metadata":{},"sourceType":"module"}